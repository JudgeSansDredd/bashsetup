# Constants
LASTPASS_SSH_FOLDER="Programming\\SSH"
LASTPASS_PEM_FOLDER="Programming\\SSH\\pem"
SSH_CONFIG_FILE="${HOME}/.ssh/config"
SSH_CONFIG_CONFD="${HOME}/.ssh/config.d"
PEM_DIRECTORY="${HOME}/.ssh/keys"
TERMINAL_HEIGHT=`tput lines`
BOX_HEIGHT=`printf "%.0f" $(echo "scale=2; $TERMINAL_HEIGHT * .5" | bc)`
TERMINAL_WIDTH=`tput cols`
BOX_WIDTH=`printf "%.0f" $(echo "scale=2; $TERMINAL_WIDTH * .75" | bc)`

# Ensure whiptail
_ensure_whiptail

# Ensure lastpass
_ensure_lastpass

# Find all config files and ask which to push
whiptail_config_files=()
for config in "${SSH_CONFIG_CONFD}"/*.config
do
    trunc_config=$(basename $config)
    trunc_config=${trunc_config/\.config/}
    whiptail_config_files+=("$trunc_config" "" ON)
done

# Select which ssh configs to push
choices=($(whiptail --separate-output --checklist "What config files would you like to push?" $BOX_HEIGHT $BOX_WIDTH 5 "${whiptail_config_files[@]}" 3>&2 2>&1 1>&3))
exitstatus=$?

if [ $exitstatus = 0 ]; then
    # OK was pressed
    for choice in "${choices[@]}"
    do
        (cat "${SSH_CONFIG_CONFD}/${choice}.config" | lpass edit --sync=now --non-interactive "${LASTPASS_SSH_FOLDER}/${choice}" --notes)
    done
fi

# Make keys directory if it doesn't exist
mkdir -p $PEM_DIRECTORY

# Find all pem keys and ask which to push
whiptail_pem_files=()
for pem_file in "${PEM_DIRECTORY}"/*.pem
do
    trunc_pem=$(basename $pem_file)
    trunc_pem=${trunc_pem/\.pem/}
    whiptail_pem_files+=("$trunc_pem" "" ON)
done

# Select which pem keys to push
choices=($(whiptail --separate-output --checklist "What pem keys would you like to push?" $BOX_HEIGHT $BOX_WIDTH 5 "${whiptail_pem_files[@]}" 3>&2 2>&1 1>&3))
exitstatus=$?

if [ $exitstatus = 0 ]; then
    # Ok was pressed
    for choice in "${choices[@]}"
    do
        (cat "${PEM_DIRECTORY}/${choice}.pem" | lpass edit --sync=now --non-interactive "${LASTPASS_PEM_FOLDER}/${choice}" --notes)
    done
fi