#!/usr/bin/env bash

red=$(tput setaf 1)
gold=$(tput setaf 3)
blue=$(tput setaf 4)
magenta=$(tput setaf 5)
cyan=$(tput setaf 6)
default=$(tput sgr0)

# ensure kubectl is installed
if ! hash kubectl 2>/dev/null
then
  echo "${red}You need kubectl installed${default}"
  exit 0
fi

CONTEXTS=( $(kubectl config get-contexts | awk 'NR!=1''{print $2}') )

# If dialog is installed, use a GUI version
if hash dialog 2>/dev/null; then

  # we require bash >= 4 to use arrays
  if [ "${BASH_VERSINFO:-0}" -le 4 ]
  then
    echo "${red}You need bash >= 4${default}"
    exit 0
  fi

  declare -a array

  i=1 #Index counter for adding to array
  j=1 #Option menu value generator

  for line in "${CONTEXTS[@]}"
  do
    array[ $i ]=$j
      (( j++ ))
      array[ ($i + 1) ]=$line
      (( i=($i+2) ))
  done

  #Define parameters for menu
  TERMINAL=$(tty) #Gather current terminal session for appropriate redirection
  HEIGHT=20
  WIDTH=76
  CHOICE_HEIGHT=${#CONTEXTS[@]}
  TITLE="Kubectl Context Switcher"
  MENU="Select Context:"

  #Build the menu with variables & dynamic content
  CHOICE=$(dialog --title "$TITLE" \
                  --menu "$MENU" \
                  $HEIGHT $WIDTH $CHOICE_HEIGHT \
                  "${array[@]}" \
                  2>&1 >$TERMINAL)

  if [ ! -z "$CHOICE" ]
  then
    context="${CONTEXTS[$CHOICE - 1]}"
  fi
  clear
else
  PS3="${cyan}Select a kubectl context (q to quit): $gold"
  select context in "${CONTEXTS[@]}"; do
    case "$context" in
      "") break ;;  # This is a fake; any invalid entry makes $context=="", not just "q".
      *) break ;;
    esac
  done
fi

if [ ! -z "$context" ]
then
  kubectl config use-context $context > /dev/null
  echo "${blue}Kubectl Context switched to [${magenta}$context${default}]"
fi